(()=>{"use strict";document.addEventListener("DOMContentLoaded",(function(){(new class{constructor(){this.taskManager=new TaskManager,this.taskForm=document.getElementById("task-form"),this.taskTable=document.getElementById("task-table"),this.filterStatusInput=document.getElementById("filter-status"),this.selectAllCheckbox=document.getElementById("select-all-checkbox"),this.changeStatusSelectedBtn=document.getElementById("change-status-selected-btn"),this.taskForm&&this.taskTable&&this.filterStatusInput&&this.selectAllCheckbox&&this.changeStatusSelectedBtn?(this.taskForm.addEventListener("submit",(t=>{t.preventDefault(),this.addTask()})),this.filterStatusInput.addEventListener("change",(()=>{this.renderTaskList()})),this.selectAllCheckbox.addEventListener("change",(()=>{document.querySelectorAll(".task-checkbox").forEach((t=>{t.checked=this.selectAllCheckbox.checked}))})),this.changeStatusSelectedBtn.addEventListener("click",(()=>{const t=[],e=document.querySelectorAll(".task-checkbox");e.forEach(((e,a)=>{e.checked&&t.push(a)})),t.forEach((t=>{this.taskManager.deleteTask(t)})),this.renderTaskList(),this.selectAllCheckbox.checked=!1,e.forEach((t=>{t.checked=!1}))})),this.renderTaskList(this.taskManager.getTasks())):console.error("One or more elements are missing on the page.")}addTask(){const t=document.getElementById("task-name"),e=document.getElementById("task-description"),a=document.getElementById("task-due-date"),s=document.getElementById("task-priority"),n=document.getElementById("task-category"),d=document.getElementById("task-status"),i={name:t.value.trim(),description:e.value.trim(),dueDate:a.value,priority:parseInt(s.value),category:n.value.trim(),status:d.value};this.validatePriority(i.priority)?this.validateDueDate(i.dueDate)?this.validateTask(i)?(this.taskManager.addTask(i),this.renderTaskList(),this.clearInputFields()):alert("Please fill in all required fields."):alert("Data de término inválida ou menor que a data atual."):alert("Nível de prioridade inválido.")}getUpdatedTaskFromForm(){const t=document.getElementById("task-name"),e=document.getElementById("task-description"),a=document.getElementById("task-due-date"),s=document.getElementById("task-priority"),n=document.getElementById("task-category"),d=document.getElementById("task-status"),i={name:t.value.trim(),description:e.value.trim(),dueDate:a.value,priority:parseInt(s.value),category:n.value.trim(),status:d.value};if(this.validatePriority(i.priority)){if(this.validateDueDate(i.dueDate))return this.validateTask(i)?i:void alert("Por favor, preencha todos os campos obrigatórios.");alert("Data de término inválida ou menor que a data atual.")}else alert("Nível de prioridade inválido.")}validatePriority(t){return/^[1-5]$/.test(t)}validateDueDate(t){if(!/^\d{4}-\d{2}-\d{2}$/.test(t))return!1;const e=new Date;return new Date(t)>=e}validateTask(t){return""!==t.name&&""!==t.description&&""!==t.dueDate&&!isNaN(t.priority)&&""!==t.category}clearInputFields(){const t=document.getElementById("task-name"),e=document.getElementById("task-description"),a=document.getElementById("task-due-date"),s=document.getElementById("task-priority"),n=document.getElementById("task-category"),d=document.getElementById("task-status");t.value="",e.value="",a.value="",s.value="",n.value="",d.value="todo"}renderTaskList(){const t=this.taskManager.filterTasksByStatus(this.filterStatusInput.value);this.taskTable.innerHTML="",t.forEach(((t,e)=>{const a=document.createElement("tr");a.innerHTML=`\n        <td><input type="checkbox" class="task-checkbox" data-index="${e}"></td>\n        <td>${t.name}</td>\n        <td>${t.description}</td>\n        <td>${t.category}</td>\n        <td>${t.dueDate}</td>\n        <td>${t.priority}</td>\n        <td>${t.status}</td>\n        <td class="actions">\n          <button class="edit-task-btn" data-index="${e}">Editar</button>\n          <button class="delete-task-btn" data-index="${e}">Excluir</button>\n        </td>\n      `,this.taskTable.appendChild(a)})),this.setupEditButtons(),this.setupDeleteButtons()}setupEditButtons(){document.querySelectorAll(".edit-task-btn").forEach((t=>{t.addEventListener("click",(()=>{const e=t.getAttribute("data-index"),a=this.getUpdatedTaskFromForm();this.taskManager.editTask(e,a),this.renderTaskList()}))}))}setupDeleteButtons(){document.querySelectorAll(".delete-task-btn").forEach((t=>{t.addEventListener("click",(()=>{const e=t.getAttribute("data-index");this.taskManager.deleteTask(e),this.renderTaskList()}))}))}}).renderTaskList()}))})();